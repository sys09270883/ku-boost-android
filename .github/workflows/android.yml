name: Android CI/CD with Gradle

on:
  push:
    branches: [ main, dev ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  Build:
    name: Do build, test, generate APK
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@v1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Decrypt services
        run:
          gpg --quiet --batch --yes --always-trust --decrypt --passphrase="$FIREBASE_SECRET" --output services.tar services.tar.gpg

        env:
          FIREBASE_SECRET: ${{ secrets.FIREBASE_SECRET }}

      - name: Unzip services
        run:
          tar xvf services.tar

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Unit test
        run: ./gradlew testDebugUnitTest

      - name: Upload test reports
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: reports
          path: app/build/test-results

      - name: Download test reports folder
        uses: actions/download-artifact@v2
        with:
          name: reports

      - name: Android test report
        uses: asadmansr/android-test-report-action@v1.2.0

      - name: Upload APK(debug)
        uses: actions/upload-artifact@v1
        with:
          name: app
          path: app/build/outputs/apk/debug/app-debug.apk

  Analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@v1
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Decrypt services
        run:
          gpg --quiet --batch --yes --always-trust --decrypt --passphrase="$FIREBASE_SECRET" --output services.tar services.tar.gpg

        env:
          FIREBASE_SECRET: ${{ secrets.FIREBASE_SECRET }}

      - name: Unzip services
        run:
          tar xvf services.tar

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube --info

